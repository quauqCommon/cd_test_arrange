<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ceis.arrange.web.dao.auto.ScriptDAO">
    <resultMap id="BaseResultMap" type="com.ceis.arrange.web.model.auto.Script">
    	
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="comment" property="comment" jdbcType="VARCHAR" />
        <result column="category" property="category" jdbcType="INTEGER" />
        <result column="selfCategory" property="selfCategory" jdbcType="INTEGER" />
        <result column="returnCategory" property="returnCategory" jdbcType="INTEGER" />
        <result column="projectId" property="projectId" jdbcType="INTEGER" />
        <result column="projectName" property="userId" jdbcType="INTEGER" />
        <result column="userName" property="userName" jdbcType="VARCHAR" />
        <result column="insertTime" property="insertTime" jdbcType="VARCHAR" />
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
        <result column="pageSize" property="pageSize" jdbcType="INTEGER" />
        <result column="pageStart" property="pageStart" jdbcType="INTEGER" />
    </resultMap>
    
    
	<select id="findList" resultMap="BaseResultMap" parameterType="com.ceis.arrange.web.model.auto.Script">
        select t.* from t_script t
        where 1=1
        <if test="pageSize != null and pageStart != null">
        	limit #{pageStart},#{pageSize}
        </if>
    </select>

   
       
    <select id="findCount" resultType="Integer" parameterType="com.ceis.arrange.web.model.auto.Script">
        select count(1) count from ( select
        *
        from t_script t where 1=1
        )tt
    </select>
    <insert id="insert" parameterType="com.ceis.arrange.web.model.auto.Script">
        insert into t_script (name,ip,userName,password,category)
        values (#{name,jdbcType=VARCHAR},#{ip,jdbcType=VARCHAR},#{userName,jdbcType=VARCHAR}, #{password,jdbcType=CHAR},#{category,jdbcType=BIGINT})
    </insert>
    <delete id="delete" parameterType="Integer">
        delete from t_script where id=#{id}
    </delete>
</mapper>